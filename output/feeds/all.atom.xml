<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>SDN Hands ON!</title><link href="https://bbill.github.io/" rel="alternate"></link><link href="https://bbill.github.io/feeds/all.atom.xml" rel="self"></link><id>https://bbill.github.io/</id><updated>2015-12-29T00:00:00+08:00</updated><entry><title>SDN 教学大纲</title><link href="https://bbill.github.io/test_slug.html" rel="alternate"></link><published>2015-12-29T00:00:00+08:00</published><author><name>service@tooyum.com</name></author><id>tag:bbill.github.io,2017-09-25:test_slug.html</id><summary type="html">&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sec-1"&gt;1. 教学环境准备&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sec-1-1"&gt;1.1. 仿真工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-1-2"&gt;1.2. 常用工具&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-2"&gt;2. 传统网络基础&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-3"&gt;3. SDN 与 OpenFlow 技术基本概念&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-4"&gt;4. SDN 网络入门实验&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-5"&gt;5. 了解流表&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-6"&gt;6. RYU控制器初步&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-7"&gt;7. 进阶应用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-8"&gt;8. 实体交换机验证&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 教学环境准备&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-1-1" class="outline-3"&gt;
&lt;h3 id="sec-1-1"&gt;&lt;span class="section-number-3"&gt;1.1&lt;/span&gt; 仿真工具&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-1"&gt;
&lt;p&gt;
可选开源(mininet)，商用(estinet)仿真软件
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-1-2" class="outline-3"&gt;
&lt;h3 id="sec-1-2"&gt;&lt;span class="section-number-3"&gt;1.2&lt;/span&gt; 常用工具&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1-2"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;Wireshark 网路抓包工具
&lt;/li&gt;
&lt;li&gt;xterm
&lt;/li&gt;
&lt;li&gt;tcptrace
&lt;/li&gt;
&lt;li&gt;WinSCP
&lt;/li&gt;
&lt;li&gt;Gnuplot
&lt;/li&gt;
&lt;li&gt;Docker 与 OVS 介绍
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; 传统网络基础&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;NAT 网路地址址转换（Network Address Translation）
&lt;/li&gt;
&lt;li&gt;DHCP 动态主机设定协议（Dynamic Host Configuration Protocol）
&lt;/li&gt;
&lt;li&gt;域名解析 DNS（Domain Name System）
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; SDN 与 OpenFlow 技术基本概念&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;软体定义网路（Software-Defined Networking）
&lt;/li&gt;
&lt;li&gt;控制平面（Control Plane）
&lt;/li&gt;
&lt;li&gt;资料平面（Data Plane）
&lt;/li&gt;
&lt;li&gt;OpenFlow 架构与运作原理
&lt;/li&gt;
&lt;li&gt;SDN 控制器（SDN Controller）
&lt;ol class="org-ol"&gt;
&lt;li&gt;POX
&lt;/li&gt;
&lt;li&gt;RYU
&lt;/li&gt;
&lt;li&gt;ONOS
&lt;/li&gt;
&lt;li&gt;ODL
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;OVS（Open vSwitch）/ ovs-ofctl 简介
&lt;/li&gt;
&lt;li&gt;网路功能虚拟化
&lt;/li&gt;
&lt;li&gt;SDN与网路安全
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;&lt;span class="section-number-2"&gt;4&lt;/span&gt; SDN 网络入门实验&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;RYU 控制器安装启动
&lt;/li&gt;
&lt;li&gt;仿真工具建立一个简单的拓扑
&lt;/li&gt;
&lt;li&gt;控制器和交换机（仿真拓扑）的对接
&lt;/li&gt;
&lt;li&gt;验证
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-5" class="outline-2"&gt;
&lt;h2 id="sec-5"&gt;&lt;span class="section-number-2"&gt;5&lt;/span&gt; 了解流表&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-5"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;查看
&lt;/li&gt;
&lt;li&gt;增加删除修改
&lt;/li&gt;
&lt;li&gt;匹配项
&lt;/li&gt;
&lt;li&gt;动作
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-6" class="outline-2"&gt;
&lt;h2 id="sec-6"&gt;&lt;span class="section-number-2"&gt;6&lt;/span&gt; RYU控制器初步&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-6"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;控制器框架
&lt;/li&gt;
&lt;li&gt;事件驱动
&lt;/li&gt;
&lt;li&gt;一个简单的APP（HUB）
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-7" class="outline-2"&gt;
&lt;h2 id="sec-7"&gt;&lt;span class="section-number-2"&gt;7&lt;/span&gt; 进阶应用&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-7"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;simpleswitch
&lt;/li&gt;
&lt;li&gt;arp proxy
&lt;/li&gt;
&lt;li&gt;security （自定义策略）
&lt;ol class="org-ol"&gt;
&lt;li&gt;Firewall
&lt;/li&gt;
&lt;li&gt;QOS
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;RYU: Dijkstra 算法
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-8" class="outline-2"&gt;
&lt;h2 id="sec-8"&gt;&lt;span class="section-number-2"&gt;8&lt;/span&gt; 实体交换机验证&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-8"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;在实体交换机上验证自己的APP
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="ryu"></category><category term="openflow"></category><category term="mininet"></category><category term="estinet"></category></entry><entry><title>Ryu 控制器的安装及基本操作</title><link href="https://bbill.github.io/ryu_lab1.html" rel="alternate"></link><published>2015-12-29T00:00:00+08:00</published><author><name>service@tooyum.com</name></author><id>tag:bbill.github.io,2017-09-24:ryu_lab1.html</id><summary type="html">&lt;div id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sec-1"&gt;1. 实验环境&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-2"&gt;2. 实验目的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-3"&gt;3. 操作步骤&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sec-3-1"&gt;3.1. 安装一些后续需要使用的软件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-3-2"&gt;3.2. 安装 ryu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-3-3"&gt;3.3. 安装 mininet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-3-4"&gt;3.4. ryu 控制和mininet连接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#sec-4"&gt;4. 附录&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#sec-4-1"&gt;4.1. 用到的命令&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;



&lt;div id="outline-container-sec-1" class="outline-2"&gt;
&lt;h2 id="sec-1"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 实验环境&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;一台可以上网的主机station X (IP 地址 192.168.10.X）
&lt;/li&gt;
&lt;li&gt;ubuntu 14.04 操作系统,用户名 user 密码 linux123
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-2" class="outline-2"&gt;
&lt;h2 id="sec-2"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; 实验目的&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;掌握Linux 命令行基础使用方法
&lt;/li&gt;
&lt;li&gt;掌握Ubuntu 软件安装方法
&lt;/li&gt;
&lt;li&gt;掌握 mininet 基础使用方法
&lt;/li&gt;
&lt;li&gt;掌握 ryu 控制器的基本用法
&lt;/li&gt;
&lt;li&gt;了解 screen 的用法
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-sec-3" class="outline-2"&gt;
&lt;h2 id="sec-3"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; 操作步骤&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-3-1" class="outline-3"&gt;
&lt;h3 id="sec-3-1"&gt;&lt;span class="section-number-3"&gt;3.1&lt;/span&gt; 安装一些后续需要使用的软件&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-1"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;git 版本管理工具
&lt;/li&gt;
&lt;li&gt;screen 终端增强工具
ubuntu 是基于debian的linux 发行版，采用 apt-get/aptitude 来进行软件的安装，升级，解决依赖关系等.
可以在终端执行

&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;apt-get install git screen
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
来安装 git和screen 两个包.
&lt;/p&gt;

&lt;p&gt;
由于当前用户是普通用户不具备安装软件的权限，所以以上命令会失败，那
么普通用户如何获得root权限呢，一般有两种方式su （siwtch user）获
得一个交互shell 或者 sudo （switch user do） 在执行命令时获得
root权限，不进入交互模式。将以上命令修改为：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;sudo apt-get install git screen
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
提示输入密码（输入 user 用户密码 linux123), 你可以看到命令成功执行了。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-sec-3-2" class="outline-3"&gt;
&lt;h3 id="sec-3-2"&gt;&lt;span class="section-number-3"&gt;3.2&lt;/span&gt; 安装 ryu&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-2"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;下载安装脚本
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-shell"&gt;wget https://raw.githubusercontent.com/sdnds-tw/ryuInstallHelper/master/ryuInstallHelper.sh
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;查看安装脚本内容
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;user@station21:~$ cat ryuInstallHelper.sh
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;执行安装脚本
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;sudo bash ryuInstallHelper.sh
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
补充，
&lt;/p&gt;

&lt;p&gt;
sudo aptitude install debian-keyring debian-archive-keyring
&lt;/p&gt;

&lt;p&gt;
sudo apt-key adv &amp;#x2013;keyserver keyserver.ubuntu.com &amp;#x2013;recv-keys
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-3-3" class="outline-3"&gt;
&lt;h3 id="sec-3-3"&gt;&lt;span class="section-number-3"&gt;3.3&lt;/span&gt; 安装 mininet&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-3"&gt;
&lt;p&gt;
mininet 是一个网络拓扑仿真程序，可以非常方便的实现拓扑/交换机的模拟，
支持openflow协议。方便用户定制自己的SDN 网络拓扑。
&lt;/p&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;安装mininet
执行
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;sudo apt-get install mininet
pip install networkx
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;停止并禁用 openvswitch-controller 服务
mininet 默认会安装一个openvswitch-controller 控制器，此服务启动后会占用控制器的默认端口，所以先暂时停止

&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;sudo /etc/init.d/openvswitch-controller  stop
&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;
并禁用该服务
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;sudo update-rc.d -f openvswitch-controller remove
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;


&lt;div id="outline-container-sec-3-4" class="outline-3"&gt;
&lt;h3 id="sec-3-4"&gt;&lt;span class="section-number-3"&gt;3.4&lt;/span&gt; ryu 控制和mininet连接&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-3-4"&gt;
&lt;ol class="org-ol"&gt;
&lt;li&gt;启动 screen 终端管理工具
screen -DR
&lt;ul class="org-ul"&gt;
&lt;li&gt;通过Ctrl-a S 快捷键将屏幕切分为三份 #注意大小写
&lt;/li&gt;
&lt;li&gt;Ctrl-a [Tab] 切换到下方区域执行　Ctrl-a c 
&lt;/li&gt;
&lt;li&gt;Ctrl-a [Tab] 切换到下方区域执行　Ctrl-a c 
&lt;/li&gt;
&lt;li&gt;Ctrl-a [Tab] 切换到第一个窗口
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;启动一个简单网络拓扑
&lt;ul class="org-ul"&gt;
&lt;li&gt;启动ovs服务
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;sudo /etc/init.d/openvswitch-switch start
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;启动mininet拓扑

&lt;p&gt;
在该窗口启动一个简单mininet 拓扑,并指定SDN 控制器为本地地址（192.168.10.21）
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;sudo mn --topo single,3 --mac --switch ovsk --controller remote,ip=192.168.10.21,port=6633
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;检查交换机状态
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;sudo ovs-vsctl show
bee7cda2-0792-4de4-9381-fc7f298f3baa
    Bridge "s1"   
	Controller "ptcp:6634"
	Controller "tcp:192.168.10.21:6633"
	fail_mode: secure
	Port "s1-eth3"
	    Interface "s1-eth3"
	Port "s1-eth1"
	    Interface "s1-eth1"
	Port "s1"
	    Interface "s1"
		type: internal
	Port "s1-eth2"
	    Interface "s1-eth2"
    ovs_version: "2.0.2"
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;启动ryu 控制器
&lt;ul class="org-ul"&gt;
&lt;li&gt;Ctrl-a [Tab] 切换到第二个窗口
&lt;/li&gt;
&lt;li&gt;启动 ryu 控制器，以及一个简单的应用
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;./ryu/bin/ryu-manager ./ryu/ryu/app/simple_switch_13.py
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
启动一个符合 openflow 1.3 标准的交换机应用
&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;确认交换机和控制器的连接是否成功
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;sudo ovs-vsctl show
bee7cda2-0792-4de4-9381-fc7f298f3baa
    Bridge "s1"   
	Controller "ptcp:6634"
	Controller "tcp:192.168.10.21:6633"
	     is_connected: true
	fail_mode: secure
	Port "s1-eth3"
	    Interface "s1-eth3"
	Port "s1-eth1"
	    Interface "s1-eth1"
	Port "s1"
	    Interface "s1"
		type: internal
	Port "s1-eth2"
	    Interface "s1-eth2"
    ovs_version: "2.0.2"
&lt;/pre&gt;
&lt;/div&gt;
&lt;/li&gt;

&lt;li&gt;网络通吗？

&lt;p&gt;
在mininet 终端下主机之间互ping ，可以看到是无法ping 通的。
&lt;/p&gt;

&lt;p&gt;
检查控制器的输出你可以注意到如下内容：
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;./ryu/bin/ryu-manager ./ryu/ryu/app/simple_switch_13.py
unsupported version 0x1. If possible, set the switch to use one of the versions [4]
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
这意味着交换机（mininet) 和ryu 控制器之间的openflow 协议协商不成功。我们需要手工指定交换机的openflow 协议版本。
&lt;/p&gt;

&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;ovs-vsctl set bridge s1 protocols=OpenFlow10,OpenFlow13
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
可选多个版本。
&lt;/p&gt;

&lt;p&gt;
观察ryu-manager 的输出是不是有一些不同，尝试在mininet中ping，现在网络应该通了。
&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;






&lt;div id="outline-container-sec-4" class="outline-2"&gt;
&lt;h2 id="sec-4"&gt;&lt;span class="section-number-2"&gt;4&lt;/span&gt; 附录&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;/div&gt;&lt;div id="outline-container-sec-4-1" class="outline-3"&gt;
&lt;h3 id="sec-4-1"&gt;&lt;span class="section-number-3"&gt;4.1&lt;/span&gt; 用到的命令&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-4-1"&gt;
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;apt-get install git screen
sudo apt-get install git screen -y
wget https://raw.githubusercontent.com/sdnds-tw/ryuInstallHelper/master/ryuInstallHelper.sh
less ryuInstallHelper.sh
sudo bash ryuInstallHelper.sh
sudo apt-get install  mininet  -y
sudo /etc/init.d/openvswitch-switch status
sudo /etc/init.d/openvswitch-switch start
sudo /etc/init.d/openvswitch-controller stop
sudo update-rc.d -f openvswitch-controller remove
sudo mn --topo single,3 --mac --switch ovsk --controller remote,ip=192.168.10.21,port=6633
sudo ovs-vsctl show
/etc/init.d/openvswitch-switch status
screen -DR
sudo mn --topo single,3 --mac --switch ovsk --controller remote,ip=192.168.10.21,port=6633
./ryu/bin/ryu-manager ./ryu/ryu/app/simple_switch_13.py 
sudo ovs-vsctl set bridge s1 protocols=OpenFlow10,OpenFlow13 
sudo kill -9 `pgrep -f 'ryu-manager'`
&lt;/pre&gt;
&lt;/div&gt;



&lt;p&gt;
如果ubuntu没有安装图形界面，可以通过 
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;apt-get install gnome-shell ubuntu-gnome-desktop
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
在虚拟化环境中加以禁用3D效果以改善体验：
&lt;/p&gt;
&lt;div class="org-src-container"&gt;

&lt;pre class="src src-bash"&gt;apt-get  install gnome-session-fallback
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
然后从图形界面 logout，在登录时选择 GNOME FlashBack (metacity)。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</summary><category term="ryu"></category><category term="openflow"></category><category term="mininet"></category></entry></feed>